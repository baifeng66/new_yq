<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WS.API</name>
    </assembly>
    <members>
        <member name="T:WS.API.Controllers.BaseController">
            <summary>
            基础类
            </summary>
        </member>
        <member name="F:WS.API.Controllers.BaseController._ibaseLogBLL">
            <summary>
            
            </summary>
        </member>
        <member name="M:WS.API.Controllers.BaseController.#ctor(WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <param name="ibaseLogBLL"></param>
            <param name="accessor"></param>
        </member>
        <member name="P:WS.API.Controllers.BaseController.LoginType">
            <summary>
            0-web,1-安卓，2-ios
            </summary>
        </member>
        <member name="P:WS.API.Controllers.BaseController.uid">
            <summary>
            用户的ID
            </summary>
        </member>
        <member name="P:WS.API.Controllers.BaseController.Token">
            <summary>
            获取传入的token
            </summary>
        </member>
        <member name="M:WS.API.Controllers.BaseController.addlog(WS.Db.Model.baseLog.ApiLogType,System.String)">
            <summary>
            添加日志
            </summary>
            <param name="type">日志类型</param>
            <param name="msg">消息内容，拼接在类型字符串后面</param>
            <returns></returns>
        </member>
        <member name="T:WS.API.Controllers.baseDictController">
            <summary>
            数据字典控制
            </summary>
        </member>
        <member name="M:WS.API.Controllers.baseDictController.#ctor(WS.Db.IBLL.IbaseDictBLL,WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
             构造函数
             </summary>
             <param name="iservice"></param>
             <param name="ibaseLogBLL"></param>
             <param name="accessor"></param>
        </member>
        <member name="M:WS.API.Controllers.baseDictController.listall">
            <summary>
            获取数据字典表所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseDictController.delete(System.Int32)">
            <summary>
            删除指定id的数据字典记录
            </summary>
            <param name="id">字典ID</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseDictController.add(WS.Db.Model.baseDict)">
            <summary>
            添加数据字典记录
            </summary>
            <param name="mode">字典的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseDictController.edit(WS.Db.Model.baseDict)">
            <summary>
            修改字典
            </summary>
            <param name="mode">字典的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseDictController.page(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            翻页查询数据
            </summary>
            <param name="dictName">单位名称</param>
            <param name="dictCode">字典编码</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:WS.API.Controllers.baseLogController">
            <summary>
            日志控制
            </summary>
        </member>
        <member name="M:WS.API.Controllers.baseLogController.#ctor(WS.Db.IBLL.IbaseLogBLL,WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            构造函数
            </summary>
            <param name="iservice"></param>
            <param name="ibaseLogBLL"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:WS.API.Controllers.baseLogController.listall">
            <summary>
            获取日志表所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseLogController.delete(System.Int32)">
            <summary>
            删除日志
            </summary>
            <param name="id">日志的id</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseLogController.add(WS.Db.Model.baseLog)">
            <summary>
            添加日志
            </summary>
            <param name="mode">日志的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseLogController.edit(WS.Db.Model.baseLog)">
            <summary>
            修改日志
            </summary>
            <param name="mode">日志的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseLogController.page(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            翻页查询数据
            </summary>
            <param name="content">日志内容</param>
            <param name="userId">用户ID</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:WS.API.Controllers.baseMenuController">
            <summary>
            菜单控制
            </summary>
        </member>
        <member name="M:WS.API.Controllers.baseMenuController.#ctor(WS.Db.IBLL.IbaseMenuBLL,WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            构造函数
            </summary>
            <param name="iservice"></param>
            <param name="ibaseLogBLL"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:WS.API.Controllers.baseMenuController.listall">
            <summary>
            获取所有菜单信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseMenuController.delete(System.Int32)">
            <summary>
            删除菜单
            </summary>
            <param name="id">菜单的id</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseMenuController.add(WS.Db.Model.baseMenu)">
            <summary>
            添加菜单
            </summary>
            <param name="mode">菜单的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseMenuController.edit(WS.Db.Model.baseMenu)">
            <summary>
            修改菜单
            </summary>
            <param name="mode">菜单的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseMenuController.page(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            翻页查询数据
            </summary>
            <param name="menuName">菜单名称</param>
            <param name="state">状态，0-禁用，1-启用</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:WS.API.Controllers.baseRoleController">
            <summary>
            角色控制
            </summary>
        </member>
        <member name="M:WS.API.Controllers.baseRoleController.#ctor(WS.Db.IBLL.IbaseRoleBLL,WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            构造函数
            </summary>
            <param name="iservice"></param>
            <param name="ibaseLogBLL"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:WS.API.Controllers.baseRoleController.listall">
            <summary>
            获取角色表所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseRoleController.delete(System.Int32)">
            <summary>
            删除角色
            </summary>
            <param name="id">角色的id</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseRoleController.add(WS.Db.Model.baseRole)">
            <summary>
            添加角色
            </summary>
            <param name="mode">角色的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseRoleController.edit(WS.Db.Model.baseRole)">
            <summary>
            修改角色
            </summary>
            <param name="mode">角色的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.baseRoleController.page(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            翻页查询数据
            </summary>
            <param name="roleName">角色名称</param>
            <param name="state">状态，0-禁用，1-启用</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:WS.API.Controllers.caseDocController">
            <summary>
            文书控制
            </summary>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.#ctor(WS.Db.IBLL.IcaseDocBLL,WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            构造函数
            </summary>
            <param name="iservice"></param>
            <param name="ibaseLogBLL"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.listall">
            <summary>
            获取文书表所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.delete(System.Int32)">
            <summary>
            删除文书
            </summary>
            <param name="id">文书的id</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.add(WS.Db.Model.caseDoc)">
            <summary>
            添加文书
            </summary>
            <param name="mode">文书的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.edit(WS.Db.Model.caseDoc)">
            <summary>
            修改文书
            </summary>
            <param name="mode">文书的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.updateByIdAndTort(System.Int32,System.String)">
            <summary>
            修改文书侵权事实
            </summary>
            <param name="caseId">文书编号</param>
            <param name="tort">侵权事实</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.updateByIdAndIssue(System.Int32,System.String)">
            <summary>
            修改文书诉争焦点
            </summary>
            <param name="caseId">文书编号</param>
            <param name="issue">诉争焦点</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.updateByIdAndAppraisal(System.Int32,System.String)">
            <summary>
            修改文书鉴定类型
            </summary>
            <param name="caseId">文书编号</param>
            <param name="appraisal">鉴定类型</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.editrepair(System.Int32,System.String)">
            <summary>
            修改文书修复方式
            </summary>
            <param name="caseId">编号</param>
            <param name="repair">修复方式</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.editgist(System.Int32,System.String)">
            <summary>
            修改文书裁判要旨
            </summary>
            <param name="caseId">编号</param>
            <param name="gist">裁判要旨</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.page(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            翻页查询数据
            </summary>
            <param name="caseNum">案号：唯一索引</param>
            <param name="caseName">案件名称</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.Fullsearch(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            带条件全文检索
            </summary>
            <param name="content">全文</param>
            <param name="caseType">文书分类</param>
            <param name="caseNum">案号</param>
            <param name="caseName">案件名称</param>
            <param name="reason">案由</param>
            <param name="docType">文书类型</param>
            <param name="tryLevel">审理级别</param>
            <param name="tryCou">审判法院</param>
            <param name="unionlaw">是否共同评讼</param>
            <param name="plaintiff">原告</param>
            <param name="defendant">被告</param>
            <param name="regDate">立案日期</param>
            <param name="judgeDate">裁判日期</param>
            <param name="tryProc">审判程序</param>
            <param name="isWelf">是否公益诉讼</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.total">
            <summary>
            统计案件总数
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.typetotal(System.String)">
            <summary>
            统计不同类型案件总数
            </summary>
            <param name = "caseType"> 案件分类 </param >
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.ReasonStatistic">
            <summary>
            按照案由统计
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.getById(System.Int32)">
            <summary>
            根据案件caseId获取详情
            </summary>
            <param name = "caseId"> 案件编号 </param >
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.getAllDocType">
            <summary>
            获取全部文书类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.getAlltryLevel">
            <summary>
            获取全部审理级别
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.caseDocController.getAlltryProc">
            <summary>
            获取全部审判程序
            </summary>
            <returns></returns>
        </member>
        <member name="T:WS.API.Controllers.roleMenuController">
            <summary>
            角色菜单关联控制
            </summary>
        </member>
        <member name="M:WS.API.Controllers.roleMenuController.#ctor(WS.Db.IBLL.IroleMenuBLL,WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            构造函数
            </summary>
            <param name="iservice"></param>
            <param name="ibaseLogBLL"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:WS.API.Controllers.roleMenuController.listall">
            <summary>
            获取角色菜单关联表所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.roleMenuController.delete(System.Int32)">
            <summary>
            删除角色菜单关联表中的一条记录
            </summary>
            <param name="id">角色id</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.roleMenuController.add(WS.Db.Model.roleMenu)">
            <summary>
            添加角色菜单关联记录
            </summary>
            <param name="mode">角色菜单关联的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.roleMenuController.edit(WS.Db.Model.roleMenu)">
            <summary>
            修改角色菜单关联记录
            </summary>
            <param name="mode">角色菜单关联的实体集合</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.roleMenuController.page(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            翻页查询数据
            </summary>
            <param name="roleId">角色ID</param>
            <param name="menuId">菜单ID</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:WS.API.Controllers.userInfoController">
            <summary>
            用户控制
            </summary>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.#ctor(WS.Db.IBLL.IuserInfoBLL,WS.Db.IBLL.IbaseLogBLL,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            构造函数
            </summary>
            <param name="iservice"></param>
            <param name="ibaseLogBLL"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.listall">
            <summary>
            获取用户表所有信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.delete(System.Int32)">
            <summary>
            删除用户
            </summary>
            <param name="id">用户的id</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.add(WS.Db.Model.userInfo)">
            <summary>
            添加用户
            </summary>
            <param name="mode">用户实体</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.edit(WS.Db.Model.userInfo)">
            <summary>
            修改用户信息
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.page(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            翻页查询数据
            </summary>
            <param name="loginName">用户名</param>
            <param name="userId">用户ID</param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.forbidOrActive(System.Int32)">
            <summary>
            禁用/启用一个用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.getCurrentUser">
            <summary>
            获取当前用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.Authenticate(System.String,System.String)">
            <summary>
            登录
            </summary>
            <param name="username">用户名</param>
            <param name="password">用户Md5加密密码</param>
            <returns></returns>
        </member>
        <member name="M:WS.API.Controllers.userInfoController.UpdateAnyPassword(System.Int32,System.String)">
            <summary>
            前台用户修改任意用户的密码
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
